{"version":3,"sources":["components/MedalCount.js","components/MedalListItem.js","components/MedalList.js","App.js","reportWebVitals.js","index.js"],"names":["MedalCount","className","onClick","this","props","decrement","style","backgroundColor","color","count","increment","Component","types","identifier","MedalListItem","state","name","total","i","c","counts","setState","reduce","a","b","_set_count_by_index","_get_count_by_index","Badge","badgeContent","map","t","bind","countries","MedalList","App","Container","maxWidth","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.00812a96.chunk.js","sourcesContent":["import './../css/MedalCount.css';\r\nimport { Component } from 'react';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle';\r\n\r\nexport default class MedalCount extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"medal-count-outer\">\r\n                <RemoveCircleIcon onClick={this.props.decrement} />\r\n                <div className=\"medal-count-inner\" style={{ backgroundColor: this.props.color }}><p>{this.props.count}</p></div>\r\n                <AddCircleIcon onClick={this.props.increment} />\r\n            </div>\r\n        )\r\n    }\r\n}","import './../css/MedalListItem.css';\r\nimport MedalCount from './MedalCount';\r\nimport { Component } from 'react';\r\nimport { Badge } from '@material-ui/core';\r\n\r\nlet types = [\r\n    {\r\n        color: '#ffd900',\r\n        count: 0,\r\n        identifier: 'Gold Medals'\r\n    },\r\n\r\n    {\r\n        color: '#c5cad9',\r\n        count: 0,\r\n        identifier: 'Silver Medals'\r\n    },\r\n\r\n    {\r\n        color: '#d9a36a',\r\n        count: 0,\r\n        identifier: 'Bronze Medals'\r\n    }\r\n]\r\n\r\nexport default class MedalListItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { count: [ 0, 0, 0 ], name: props.name, total: 0 }\r\n    }\r\n\r\n    //store(num) { localStorage.setItem(this.state.name.split(' ').join('-'), num) }\r\n    //set(num) { this.setState({ count: num }); this.store(num) }\r\n\r\n    _set_count_by_index(i, c) {\r\n        let counts = this.state.count;\r\n        counts[i] = c;\r\n        this.setState({ count: counts, total: counts.reduce((a, b) => a + b, 0) });\r\n    }\r\n\r\n    _get_count_by_index(i) {\r\n        let counts = this.state.count;\r\n        return counts[i];\r\n    }\r\n\r\n    increment(i) { this._set_count_by_index(i, this._get_count_by_index(i) + 1); this.props.increment(); }\r\n    decrement(i) {\r\n        if (this._get_count_by_index(i) === 0) { return }\r\n        this._set_count_by_index(i, this._get_count_by_index(i) - 1);\r\n        this.props.decrement();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p className=\"medal-header\">{this.state.name}<Badge badgeContent={this.state.total} color=\"primary\" /></p>\r\n                {\r\n                    types.map((t, i) =>\r\n                        <MedalCount\r\n                            color={t.color}\r\n                            count={this.state.count[i]}\r\n                            key={i}\r\n\r\n                            // .bind allows me pass the index of the medal into the functions arguments when it's called from this scope, rather from within MedalCount\r\n                            // MedalCount won't ever need to know what it's index is\r\n                            increment={this.increment.bind(this, i)}\r\n                            decrement={this.decrement.bind(this, i)}\r\n                        />\r\n                    )\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import './../css/MedalList.css';\r\nimport MedalListItem from './MedalListItem';\r\nimport { Component, Fragment } from 'react';\r\nimport { Badge } from '@material-ui/core';\r\n\r\nlet countries = [\r\n    'United States',\r\n    'China',\r\n    'Russia',\r\n    'Germany',\r\n    'Brazil',\r\n    'Japan'\r\n]\r\n\r\nexport default class MedalList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { total: 0 };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <h1>Medals <Badge badgeContent={this.state.total} color=\"secondary\" /></h1>\r\n                <div>\r\n                    {countries.map((c, i) => <MedalListItem name={c} key={i} increment={this.increment.bind(this)} decrement={this.decrement.bind(this)} />)}\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n\r\n    increment() { this.setState({ total: this.state.total + 1 }) }\r\n    decrement() { this.setState({ total: this.state.total - 1 }) }\r\n}\r\n","import './App.css';\r\n\r\nimport Container from '@material-ui/core/Container';\r\nimport MedalList from './components/MedalList';\r\n\r\nfunction App() {\r\n  return (\r\n    <Container className=\"container\" maxWidth=\"sm\">\r\n        <MedalList />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}